<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>Audio Analyzer</title>
  <style>
  </style>
</head>

<body>
  <script>
    var WIDTH = 300;
    var HEIGHT = 150;
    var analyser;
    
    //request microphone stream
    navigator.getUserMedia({ audio: true }, function (stream) {
      // Visualizations with Web Audio API  
      var audioCtx = new (window.AudioContext || window.webkitAudioContext)();
      analyser = audioCtx.createAnalyser();
      var source = audioCtx.createMediaStreamSource(stream);
      source.connect(analyser);
      analyser.connect(audioCtx.destination);

      analyser.fftSize = 2048;
      var bufferLength = analyser.frequencyBinCount;
      var dataArray = new Uint8Array(bufferLength);

      analyser.getByteTimeDomainData(dataArray);

      var c = document.getElementById("canvas");
      var canvasCtx = c.getContext("2d");
      canvasCtx.clearRect(0, 0, WIDTH, HEIGHT);
      draw();
    }, function () { console.log('Error getting Microphone stream'); });

    function draw() {
      var drawVisual = requestAnimationFrame(draw);
      analyser.getByteTimeDomainData(dataArray);
      canvasCtx.fillStyle = 'rgb(200, 200, 200)';
      canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);
      canvasCtx.lineWidth = 2;
      canvasCtx.strokeStyle = 'rgb(0, 0, 0)';
      canvasCtx.beginPath();

      var sliceWidth = WIDTH * 1.0 / bufferLength;
      var x = 0;
      for (var i = 0; i < bufferLength; i++) {
        var v = dataArray[i] / 128.0;
        var y = v * HEIGHT / 2;

        if (i === 0) {
          canvasCtx.moveTo(x, y);
        } else {
          canvasCtx.lineTo(x, y);
        }

        x += sliceWidth;
      }
      canvasCtx.lineTo(canvas.width, canvas.height / 2);
      canvasCtx.stroke();
    }
  </script>
  <canvas id="canvas" width="300" height="150">/<canvas>
</body>

</html>
